(ns blaze.firebase.auth
  (:require [cljsjs.firebase]
            [firebase-cljs.core :as fb]
            [firebase-cljs.auth :as fbauth]
            [firebase-cljs.auth.error :as fbautherr]
            [firebase-cljs.auth.provider :as fbprov]
            [blaze.firebase :as bfb]))

(def facebook-provider (fbprov/facebook))

(def github-provider (fbprov/github))

(def google-provider (fbprov/google))

(def twitter-provider (fbprov/twitter))

(fbprov/scope-email google-provider :google)
(fbprov/scope-email github-provider :github)
(fbprov/scope-email facebook-provider :facebook)

(fbprov/scope-profile google-provider :google)
(fbprov/scope-profile github-provider :github)
(fbprov/scope-profile facebook-provider :facebook)

(defc pending-link nil)

(defn handle-link
  [err]
  (let [cred (aget err "credential")
        email (aget err "email")
        pending {:cred cred :email email}]
    (.then
      (fbauth/providers-by-email bfb/*auth* email)
      #(reset! pending-link
        (assoc pending
          :providers (set %)
          :msg (fbautherr/message err))))))

(defn login!
  [provider & [auth]]
  (.catch
    (fbauth/login-popup (or auth bfb/*auth*) provider)
    #(case (keyword (fbautherr/code %))
      :auth/account-exists-with-different-credential (handle-link %)
      (throw (fbautherr/message %)))))

(defn logout! [& [auth]]
  (fbauth/logout (or auth bfb/*auth*)))
