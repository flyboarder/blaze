(ns blaze.mdl
  (:require [material-hl.core :as mdl]
            [material-hl.cards :as card]
            [material-hl.grid :as grid]
            [material-hl.navigation :as nav]
            [blaze.core :as blz]
            [blaze.bidi :as bidi]))

(defelem about-card [attr kids]
  (grid/cell-card :desktop-cols 4))

(defelem feature-card [attr kids]
  (grid/cell-card :desktop-cols 8))

(defelem post-card [attr kids]
  (grid/cell-card))

(def ^:dynamic *links* nil)

(defelem navigation [attr kids]
  (let [links (or (:links attr) *links*)
        prefix (or (:prefix attr) bidi/*prefix*)
        router (or (:router attr) blz/*router*)]
    (nav/navigation
      attr
      (for-tpl [l links]
        (nav/nav-link
          :click #(router (first @l) :prefix prefix)
          (text "~{(second l)}")))
      kids)))

(def ^:dynamic *title* nil)

(def ^:dynamic *items* nil)

(defelem list-card-item [attr kids]
  (let [prefix (or (:prefix attr) bidi/*prefix*)
        meta (:meta-header attr)
        desc (:meta-description attr)]
    (div :class [:mdl-card__list-item :mdl-color-text--grey-600]
      (div :class [:meta]
        (div :class [:minilogo] :style {:background-image (:avatar attr)})
        (div
          (strong (text "~{meta}"))
          (span (text "~{desc}"))))
      (a :click (:click attr)
        (h5 :class [:mdl-color-text--grey-600]
          kids)))))

(defelem list-card [attr kids]
  (let [items (:items attr *items*)
        prefix (:prefix attr bidi/*prefix*)
        title (:title attr *title*)
        type (:type attr :page)
        router (:router attr blz/*router*)]
    (grid/cell-card
      (card/card-media :class [:mdl-color-text--grey-50]
        (h3 (text "~{title}")))
      (for-tpl [i items]
        (let [item (cell= (second i))
              title (cell= (:title item))]
            (list-card-item
              attr
              :meta-header (cell= (:header (:meta item) ""))
              :meta-description (cell= (:desc (:meta item) ""))
              :avatar (cell= (:icon item "../images/avatar.png"))
              (text "~{title}")))
          ))))
